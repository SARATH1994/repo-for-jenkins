Merge preserves the changes in commit history or we can track the merge operations by using git log where as it is not possible in rebase.

git merge feature1 : suppose you are on master , the given command integrate ( add the ) changes in feature1 with master


Rebase will not maintain the any history, rebase will add the changes of given branch tip of the current branch

git rebase feature1 : Makes, will add the feature1 branch changes on latest tip of Master

git checkout -b <branch name >

git log for seeing history 

read above

GIT FLOW is the best branching statergy 

Tags only needed on master branch they are meant for production release ,  to track the code.No other branch needed tags only they need merge commits.

once merging is done we can delete Release and hot fixes branches.

The master and develop branches are long-running branches and you do not commit directly into them

Aside from an individual developer committing to a feature branch, nothing should be committed directly into master, develop, or a release branch. 


